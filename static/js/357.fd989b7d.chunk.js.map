{"version":3,"file":"static/js/357.fd989b7d.chunk.js","mappings":"sUAEaA,EAAe,8BAEfC,EAAW,mCAAG,oGACFC,EAAAA,GAAAA,IACrB,4FAFuB,cACnBC,EADmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOXC,EAAQ,mCAAG,WAAMC,GAAN,uFACCL,EAAAA,GAAAA,IAAA,6CACiBK,EADjB,8CADD,cAChBJ,EADgB,yBAKfA,EAASC,MALM,2CAAH,sDAQRI,EAAU,mCAAG,WAAMD,GAAN,uFACDL,EAAAA,GAAAA,IAAA,6CACiBK,EADjB,sDADC,cAClBJ,EADkB,yBAKjBA,EAASC,MALQ,2CAAH,sDAQVK,EAAU,mCAAG,WAAMF,GAAN,uFACDL,EAAAA,GAAAA,IAAA,6CACiBK,EADjB,sDADC,cAClBJ,EADkB,yBAKjBA,EAASC,MALQ,2CAAH,sDAQVM,EAAiB,mCAAG,WAAMC,GAAN,uFACRT,EAAAA,GAAAA,IAAA,0DAC8BS,EAD9B,8CADQ,cACzBR,EADyB,yBAKxBA,EAASC,MALe,2CAAH,qD,yGCN9B,UAzBgB,WAAO,IAAD,EACZQ,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,WAAMX,GAAN,6EAC1BS,EAD0B,UACTP,EAAAA,EAAAA,IAAWF,GADF,6EAAH,sDAGzBW,EAAoBN,GAAIO,MAAMC,QAAQC,MACvC,GAAE,CAACT,KAEF,gCACE,qCACC,UAAAG,EAAQV,eAAR,eAAiBiB,QAAS,EACvBP,EAAQV,QAAQkB,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAClB,4BACE,qCAAaD,MACb,uBAAIC,MAFIb,EADQ,IAMpB,yBAGT,C","sources":["api.js","components/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nexport const imageBaseUrl = 'https://image.tmdb.org/t/p/';\n\nexport const fetchMovies = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=bf5cf1e2c182dc5f850732c19ce27d26'\n  );\n  return response.data.results;\n};\n\nexport const getMovie = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=bf5cf1e2c182dc5f850732c19ce27d26`\n  );\n\n  return response.data;\n};\n\nexport const getCredits = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=bf5cf1e2c182dc5f850732c19ce27d26`\n  );\n\n  return response.data;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=bf5cf1e2c182dc5f850732c19ce27d26`\n  );\n\n  return response.data;\n};\n\nexport const getSearchedMovies = async searchWord => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${searchWord}&api_key=bf5cf1e2c182dc5f850732c19ce27d26`\n  );\n\n  return response.data;\n};\n","import { useParams } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { getReviews } from '../api';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState({});\n\n  useEffect(() => {\n    const getReviewsByMovieId = async movieId => {\n      setReviews(await getReviews(movieId));\n    };\n    getReviewsByMovieId(id).catch(console.error);\n  }, [id]);\n  return (\n    <section>\n      <h2>Reviews</h2>\n      {reviews.results?.length > 0\n        ? reviews.results.map(({ id, author, content }) => (\n            <div key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </div>\n          ))\n        : 'No reviews was found'}\n    </section>\n  );\n};\n\nexport default Reviews;\n"],"names":["imageBaseUrl","fetchMovies","axios","response","data","results","getMovie","movieId","getCredits","getReviews","getSearchedMovies","searchWord","id","useParams","useState","reviews","setReviews","useEffect","getReviewsByMovieId","catch","console","error","length","map","author","content"],"sourceRoot":""}