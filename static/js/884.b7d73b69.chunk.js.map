{"version":3,"file":"static/js/884.b7d73b69.chunk.js","mappings":"sUAEaA,EAAe,8BAEfC,EAAW,mCAAG,oGACFC,EAAAA,GAAAA,IACrB,4FAFuB,cACnBC,EADmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOXC,EAAQ,mCAAG,WAAMC,GAAN,uFACCL,EAAAA,GAAAA,IAAA,6CACiBK,EADjB,8CADD,cAChBJ,EADgB,yBAKfA,EAASC,MALM,2CAAH,sDAQRI,EAAU,mCAAG,WAAMD,GAAN,uFACDL,EAAAA,GAAAA,IAAA,6CACiBK,EADjB,sDADC,cAClBJ,EADkB,yBAKjBA,EAASC,MALQ,2CAAH,sDAQVK,EAAU,mCAAG,WAAMF,GAAN,uFACDL,EAAAA,GAAAA,IAAA,6CACiBK,EADjB,sDADC,cAClBJ,EADkB,yBAKjBA,EAASC,MALQ,2CAAH,sDAQVM,EAAiB,mCAAG,WAAMC,GAAN,uFACRT,EAAAA,GAAAA,IAAA,0DAC8BS,EAD9B,8CADQ,cACzBR,EADyB,yBAKxBA,EAASC,MALe,2CAAH,qD,kHCuB9B,UAtDqB,WAAO,IAAD,IACjBQ,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KAGMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAS7C,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,WAAMf,GAAN,6EACnBS,EADmB,UACGV,EAAAA,EAAAA,IAASC,GADZ,6EAAH,sDAGlBe,EAAaV,GAAIW,MAAMC,QAAQC,MAChC,GAAE,CAACb,IAGFG,EAAaH,KACX,6BACE,SAAC,KAAD,CAAMc,GAAIT,EAAV,+BACA,iBAAKU,UAAU,aAAf,WACE,gBAAKA,UAAU,0BAAf,UACE,gBACEA,UAAU,oBACVC,IAAK5B,EAAAA,GAAAA,OAAoB,QAASe,EAAac,aAC/CC,IAAKf,EAAagB,oBAGtB,iBAAKJ,UAAU,sBAAf,WACE,wBAAKZ,EAAagB,kBAClB,wCAAgBC,KAAKC,MAAkC,GAA5BlB,EAAamB,cAAxC,QACA,sCACA,6BAAKnB,EAAaoB,aAClB,oCACA,uBAAIpB,EAAaqB,OAAOC,KAAI,SAAAC,GAAK,gBAAOA,EAAMC,KAAO,IAApB,aAGrC,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMb,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAc,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAKT,C","sources":["api.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const imageBaseUrl = 'https://image.tmdb.org/t/p/';\n\nexport const fetchMovies = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=bf5cf1e2c182dc5f850732c19ce27d26'\n  );\n  return response.data.results;\n};\n\nexport const getMovie = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=bf5cf1e2c182dc5f850732c19ce27d26`\n  );\n\n  return response.data;\n};\n\nexport const getCredits = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=bf5cf1e2c182dc5f850732c19ce27d26`\n  );\n\n  return response.data;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=bf5cf1e2c182dc5f850732c19ce27d26`\n  );\n\n  return response.data;\n};\n\nexport const getSearchedMovies = async searchWord => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${searchWord}&api_key=bf5cf1e2c182dc5f850732c19ce27d26`\n  );\n\n  return response.data;\n};\n","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport React, { Suspense, useState, useEffect } from 'react';\nimport { getMovie, imageBaseUrl } from '../api';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [currentMovie, setCurrentMovie] = useState({});\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const getMovieById = async movieId => {\n      setCurrentMovie(await getMovie(movieId));\n    };\n    getMovieById(id).catch(console.error);\n  }, [id]);\n\n  return (\n    currentMovie.id && (\n      <main>\n        <Link to={backLinkHref}>Back to products</Link>\n        <div className=\"movie-card\">\n          <div className=\"movie-card__image-wrapp\">\n            <img\n              className=\"movie-card__image\"\n              src={imageBaseUrl.concat('w500/', currentMovie.poster_path)}\n              alt={currentMovie.original_title}\n            />\n          </div>\n          <div className=\"movie-card__content\">\n            <h2>{currentMovie.original_title}</h2>\n            <p>User Score: {Math.round(currentMovie.vote_average * 10)}%</p>\n            <h3>Overview</h3>\n            <p> {currentMovie.overview}</p>\n            <h3>Genres</h3>\n            <p>{currentMovie.genres.map(genre => `${genre.name + ' '}`)}</p>\n          </div>\n        </div>\n        <div>\n          <p>Additional Information</p>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n        </div>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </main>\n    )\n  );\n};\n\nexport default MovieDetails;\n"],"names":["imageBaseUrl","fetchMovies","axios","response","data","results","getMovie","movieId","getCredits","getReviews","getSearchedMovies","searchWord","id","useParams","useState","currentMovie","setCurrentMovie","backLinkHref","useLocation","state","from","useEffect","getMovieById","catch","console","error","to","className","src","poster_path","alt","original_title","Math","round","vote_average","overview","genres","map","genre","name","Suspense","fallback"],"sourceRoot":""}