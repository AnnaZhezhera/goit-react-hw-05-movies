{"version":3,"file":"static/js/134.adc952f3.chunk.js","mappings":"sUAEaA,EAAe,8BAEfC,EAAW,mCAAG,oGACFC,EAAAA,GAAAA,IACrB,4FAFuB,cACnBC,EADmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOXC,EAAQ,mCAAG,WAAMC,GAAN,uFACCL,EAAAA,GAAAA,IAAA,6CACiBK,EADjB,8CADD,cAChBJ,EADgB,yBAKfA,EAASC,MALM,2CAAH,sDAQRI,EAAU,mCAAG,WAAMD,GAAN,uFACDL,EAAAA,GAAAA,IAAA,6CACiBK,EADjB,sDADC,cAClBJ,EADkB,yBAKjBA,EAASC,MALQ,2CAAH,sDAQVK,EAAU,mCAAG,WAAMF,GAAN,uFACDL,EAAAA,GAAAA,IAAA,6CACiBK,EADjB,sDADC,cAClBJ,EADkB,yBAKjBA,EAASC,MALQ,2CAAH,sDAQVM,EAAiB,mCAAG,WAAMC,GAAN,uFACRT,EAAAA,GAAAA,IAAA,0DAC8BS,EAD9B,8CADQ,cACzBR,EADyB,yBAKxBA,EAASC,MALe,2CAAH,qD,kHCgC9B,UA/De,WAAO,IAAD,EACnB,GAAwCQ,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KAEA,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEA,GAA4CF,EAAAA,EAAAA,UAAS,IAArD,eAAOG,EAAP,KAAuBC,EAAvB,KACMC,EAAS,UAAGP,EAAaQ,IAAI,gBAApB,QAAgC,GAEzCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,WAAMd,GAAN,6EACxBQ,EADwB,UACAT,EAAAA,EAAAA,IAAkBC,GADlB,6EAAH,sDAInBS,IACFM,QAAQC,IAAI,YAAaP,GACzBK,EAAkBL,GAAWQ,MAAMF,QAAQG,OAE9C,GAAE,CAACT,IAgBJ,OACE,6BACE,kBAAMU,SAXgB,SAAAC,GACxBA,EAAEC,iBAEAlB,EADEE,EACc,CAAEiB,MAAOjB,GAET,CAAC,EAEpB,EAIG,WACE,kBACEkB,KAAK,OACLC,KAAK,QACLC,MAAOpB,EACPqB,SArBc,SAAAN,GACpB,IAAMO,EAAcP,EAAEQ,OAAOH,MAC7BnB,EAAeqB,EAChB,KAoBK,kBAAOJ,KAAK,SAASE,MAAM,eAE7B,wBACGlB,EAAeb,SACda,EAAeb,QAAQmC,KAAI,SAAAC,GAAa,OACtC,yBACE,SAAC,KAAD,CACEC,GAAI,WAAaD,EAAcE,GAC/BC,MAAO,CAAEC,KAAMvB,GAFjB,SAIGmB,EAAcK,kBALVL,EAAcE,GADe,QAajD,C","sources":["api.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const imageBaseUrl = 'https://image.tmdb.org/t/p/';\n\nexport const fetchMovies = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=bf5cf1e2c182dc5f850732c19ce27d26'\n  );\n  return response.data.results;\n};\n\nexport const getMovie = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=bf5cf1e2c182dc5f850732c19ce27d26`\n  );\n\n  return response.data;\n};\n\nexport const getCredits = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=bf5cf1e2c182dc5f850732c19ce27d26`\n  );\n\n  return response.data;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=bf5cf1e2c182dc5f850732c19ce27d26`\n  );\n\n  return response.data;\n};\n\nexport const getSearchedMovies = async searchWord => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${searchWord}&api_key=bf5cf1e2c182dc5f850732c19ce27d26`\n  );\n\n  return response.data;\n};\n","import { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { getSearchedMovies } from '../api';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams('');\n\n  const [movieSearch, setMovieSearch] = useState('');\n\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const movieName = searchParams.get('query') ?? '';\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const getFilteredMovies = async searchWord => {\n      setSearchedMovies(await getSearchedMovies(searchWord));\n    };\n\n    if (movieName) {\n      console.log('movieName', movieName);\n      getFilteredMovies(movieName).catch(console.error);\n    }\n  }, [movieName]);\n\n  const onChangeInput = e => {\n    const inputSearch = e.target.value;\n    setMovieSearch(inputSearch);\n  };\n\n  const updateQueryString = e => {\n    e.preventDefault();\n    if (movieSearch) {\n      setSearchParams({ query: movieSearch });\n    } else {\n      setSearchParams({});\n    }\n  };\n\n  return (\n    <main>\n      <form onSubmit={updateQueryString}>\n        <input\n          type=\"text\"\n          name=\"input\"\n          value={movieSearch}\n          onChange={onChangeInput}\n        />\n        <input type=\"submit\" value=\"Search\" />\n      </form>\n      <ul>\n        {searchedMovies.results &&\n          searchedMovies.results.map(searchedMovie => (\n            <li key={searchedMovie.id}>\n              <Link\n                to={'/movies/' + searchedMovie.id}\n                state={{ from: location }}\n              >\n                {searchedMovie.original_title}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["imageBaseUrl","fetchMovies","axios","response","data","results","getMovie","movieId","getCredits","getReviews","getSearchedMovies","searchWord","useSearchParams","searchParams","setSearchParams","useState","movieSearch","setMovieSearch","searchedMovies","setSearchedMovies","movieName","get","location","useLocation","useEffect","getFilteredMovies","console","log","catch","error","onSubmit","e","preventDefault","query","type","name","value","onChange","inputSearch","target","map","searchedMovie","to","id","state","from","original_title"],"sourceRoot":""}